#!/bin/zsh

# Upload files and paste on teknik.io
#
# ---------------------------------
# Author:
# ---------------------------------
# Prajjwal Singh
# sin@prajjwal.com
# https://prajjwal.com/about.html
#
# ---------------------------------
# Dependencies:
# ---------------------------------
# - jq
#
# ---------------------------------
# Optional Dependencies:
# ---------------------------------
# - xdg-open
# - xclip

# TODO:

source "${0%/*}/include/util.sh"

ensure_presence_of jq

usage() {
cat <<EOF
Usage: teknik [OPTIONS] [FILES]

Options:

-p      Paste files, or STDIN if filename is '-'.
-a      Authenticate user.
-n      Paste as anonymous user.
-s      Specify lexer to use for syntax hightlighting.
-e      Set paste expiry in <units>.
-u      Set paste expiry units(view, minute, hour, day, month, year).
-v      Set paste expiry in # of views.
-w      Set paste password.
-o      Open file in browser when done.
-h      Display this help.

Examples:

# Paste test1.rb, test2.rb with ruby syntax hightlighting.
$ teknik -p -s ruby test1.rb test2.rb

# Paste from STDIN
$ cat test1.rb | teknik -s ruby -p -

# Make paste expire after 10 views.
$ teknik -p -v 10 test1.rb

# Make paste expire after 1 year.
$ teknik -p -e 1 -u year test1.rb

# Make paste expire after 14 hours, and open it in the browser.
$ teknik -p -o -e 14 test1.rb

# Paste with a password.
$ teknik -p -w "supersecret" secrets.yml

# Interactively authenticate account.
$ teknik -a <username>

# Post something anonymously.
$ teknik -n green.txt

EOF

exit 1
}

BASE_API_URL="https://api.teknik.io/v1"
LOG_FILE=~/.teknik_log
OPEN=false
SETTINGS_URL="https://user.teknik.io/Settings"
AUTH_FILE=~/.teknik
CURL_OPTIONS="--silent "
URLS=""

IS_PASTE=false
ANONYMOUS_MODE=false
EXPIRE_UNIT=hour
EXPIRE_LENGTH=24
PASSWORD=""

# Interactively authenticate a user
function authenticate {
	echo "Trying to open your browser."
	echo "If it doesn't work, manually navigate to:"
	echo "$SETTINGS_URL"
	echo "Generate an authentication token under the 'Security' tab and enter it
	here."

	open_file $SETTINGS_URL
	read token

	echo "Saving details to $AUTH_FILE"
	echo "USER=$1" > $AUTH_FILE
	echo "TOKEN=$token" >> $AUTH_FILE
}

function teknik_log {
	touch $LOG_FILE
	echo $1 >> $LOG_FILE
}

function upload {
	curl_form_data="genDeletionKey=true&doNotTrack=true&file=@$1"

	alias curl_with_options="curl $CURL_OPTIONS"

	response=$(curl_with_options -F $curl_form_data "$BASE_API_URL/Upload")
	result=$(echo $response | jq '.["result"]')
	url=$(echo $result | jq -r '.["url"]')
	fileName=$(echo $result | jq -r '.["fileName"]')
	deletionKey=$(echo $result | jq -r '.["deletionKey"]')
	timestamp=$(date +%s)

	teknik_log "$timestamp: $1; fileName: $fileName; deletionKey: $deletionKey"

	$OPEN && open_file $url

	URLS+="\n$url"
}

function paste {
	paste_body=$(cat $1)
	curl_data="title=$1&password=$PASSWORD&expireUnit=$EXPIRE_UNIT&expireLength=$EXPIRE_LENGTH&syntax=$SYNTAX&doNotTrack=true&hide=true"
	curl_urlencode_data="code=$paste_body"

	alias curl_with_options="curl $CURL_OPTIONS"

	response=$(curl_with_options --data $curl_data --data-urlencode $curl_urlencode_data "$BASE_API_URL/Paste")
	result=$(echo $response | jq '.["result"]')
	url=$(echo $result | jq -r '.["url"]')
	id=$(echo $result | jq -r '.["id"]')
	expiration_timestamp=$(echo $result | jq -r '.["expiration"]' | tr -cd '[0-9]')
	[[ -n $expiration_timestamp ]] && expiration=$(date -d @$expiration_timestamp)
	password=$(echo $result | jq -r '.["password"]')
	timestamp=$(date +%s)

	teknik_log "$timestamp: $1; id: $id; expiration: $expiration; password:	$password"

	$OPEN && open_file $url

	URLS+="\n$url"
}

while getopts "a:nps:e:u:v:w:oh" opt; do
  case $opt in
    a)
	  authenticate $OPTARG
	  exit 0
      ;;
    n)
	  ANONYMOUS_MODE=true
      ;;
    p)
	  IS_PASTE=true
      ;;
    s)
	  SYNTAX=$OPTARG
      ;;
    e)
	  EXPIRE_LENGTH=$OPTARG
      ;;
    u)
	  EXPIRE_UNIT=$OPTARG
      ;;
    v)
	  EXPIRE_UNIT=view
	  EXPIRE_LENGTH=$OPTARG
      ;;
    w)
	  PASSWORD=$OPTARG
      ;;
    o)
	  OPEN=$OPTARG
      ;;
    h)
      usage
      ;;
  esac
done

# If user has been authenticated, load details.
if [[ (-f ~/.teknik) && ($ANONYMOUS_MODE != true) ]]; then
  source ~/.teknik
  CURL_OPTIONS+="-u $USER:$TOKEN "
fi

files=(${@:$OPTIND})
file_count=${#files[@]}

if $IS_PASTE; then;
	for file in $files; do
	  paste $file
	done
else
	for file in $files; do
	  upload $file
	done
fi

# Yank URLS to clipboard if xclip is installed.
is_installed xclip && echo $URLS | xclip -selection c
echo $URLS
